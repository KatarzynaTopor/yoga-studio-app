version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yoga-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/target:/app/target
      - ./backend/uploads:/app/uploads
    entrypoint: ["java", "-jar", "/app/app.jar"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  ui-app:
    build:
      context: ./ui-app
      dockerfile: Dockerfile
    container_name: yoga-frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    env_file:
      - .env
    volumes:
      - ./ui-app:/app
      - /app/node_modules
    command: ["npm", "start"]

  postgres:
    image: postgres:17
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-data:
